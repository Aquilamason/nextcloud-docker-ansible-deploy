---

- name: Fail if using unsupported SSL certificate retrieval method
  fail:
    msg: "The `nextcloud_ssl_retrieval_method` variable contains an unsupported value"
  when: "nextcloud_ssl_retrieval_method not in ['lets-encrypt', 'none']"

- name: Ensure SSL certificates path exists
  file:
    path: "{{ item }}"
    state: directory
    mode: 0770
    owner: "{{ nextcloud_user_username }}"
    group: "{{ nextcloud_user_username }}"
  with_items:
    - "{{ nextcloud_ssl_log_dir_path }}"
    - "{{ nextcloud_ssl_config_dir_path }}"
  when: "nextcloud_ssl_retrieval_method != 'none'"

- block:
  - name: Obtain initial certificates
    include_tasks: "setup_ssl_for_domain.yml"
    with_items: "{{ nextcloud_ssl_domains_to_obtain_certificates_for }}"
    loop_control:
      loop_var: domain_name

  - name: Ensure SSL renewal script installed
    template:
      src: "{{ role_path }}/templates/usr-local-bin/nextcloud-ssl-certificates-renew.j2"
      dest: "/usr/local/bin/nextcloud-ssl-certificates-renew"
      mode: 0750

  - name: Ensure periodic SSL renewal cronjob configured
    template:
      src: "{{ role_path }}/templates/cron.d/nextcloud-ssl-certificate-renewal.j2"
      dest: "/etc/cron.d/nextcloud-ssl-certificate-renewal"
      mode: 0600

  - name: Ensure certbot Docker image is pulled
    docker_image:
      name: "{{ nextcloud_ssl_certbot_docker_image }}"
      source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
  when: "nextcloud_ssl_retrieval_method == 'lets-encrypt'"

- block:
  - name: Ensure SSL renewal script removed
    file:
      path: "/usr/local/bin/nextcloud-ssl-certificates-renew"
      state: absent

  - name: Ensure periodic SSL renewal cronjob removed
    file:
      path: "/etc/cron.d/nextcloud-ssl-certificate-renewal"
      state: absent
  when: "nextcloud_ssl_retrieval_method != 'lets-encrypt'"
